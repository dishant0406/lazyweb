diff --git a/lazyweb/components/utility/Modals/LoginModal/LoginModal.tsx b/lazyweb/components/utility/Modals/LoginModal/LoginModal.tsx
index ffe8f22..4dfb1d1 100755
--- a/lazyweb/components/utility/Modals/LoginModal/LoginModal.tsx
+++ b/lazyweb/components/utility/Modals/LoginModal/LoginModal.tsx
@@ -5,6 +5,7 @@ import { supabaseClient } from 'lib/supabaseClient';
 import { AuthError, Provider, Session, User} from '@supabase/supabase-js';
 import { PuffLoader } from 'react-spinners';
 import {GitHub} from 'react-feather'
+import axios from 'axios';
 
 type Props = {
   isOpen: boolean,
@@ -51,10 +52,15 @@ const LoginModal = ({isOpen, setIsOpen}:Props) => {
     setLoading(true)
     setData(null)
     setError(null)
-    const {data, error} = await supabaseClient.auth.signInWithOtp({
-      email,
+    // const {data, error} = await supabaseClient.auth.signInWithOtp({
+    //   email,
+    // })
+    await axios.post(`${process.env.NEXT_PUBLIC_LAZYWEB_BACKEND_URL}/api/auth/login`,{
+      email
     })
     setData(data)
+
+
     if(error){
       setError(error)
     }
@@ -65,10 +71,31 @@ const LoginModal = ({isOpen, setIsOpen}:Props) => {
     setLoading(true)
     setData(null)
     setError(null)
-    const {data, error} = await supabaseClient.auth.signInWithOAuth({
-      provider: 'github',
-    })
-    setData(data)
+    // const {data, error} = await supabaseClient.auth.signInWithOAuth({
+    //   provider: 'github',
+    // })
+    // setData(data)
+    var width = 500;
+    var height = 600;
+    var left = (window.innerWidth) / 2;
+    var top = (window.innerHeight - height) / 2;
+    var url = `${process.env.NEXT_PUBLIC_LAZYWEB_BACKEND_URL}/oauth/github`;
+    var options = 
+      'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,' +
+      'width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;
+
+    var popup = window.open(url, 'Github', options);
+
+    window.addEventListener('message', (event) => {
+      // if (event.origin !== window.location.origin) return;
+      if (event.data.jwt) {
+        // Handle your token here
+        console.log(event.data.jwt);
+        
+        // Close the popup
+        if (popup) popup.close();
+      }
+    }, false);
     if(error){
       setError(error)
     }
@@ -98,7 +125,7 @@ const LoginModal = ({isOpen, setIsOpen}:Props) => {
           </Transition.Child>
 
           <div className="fixed inset-0 overflow-y-auto">
-            <div className="flex min-h-full items-center justify-center p-4 text-center">
+            <div className="flex items-center justify-center min-h-full p-4 text-center">
               <Transition.Child
                 as={Fragment}
                 enter="ease-out duration-300"
@@ -108,7 +135,7 @@ const LoginModal = ({isOpen, setIsOpen}:Props) => {
                 leaveFrom="opacity-100 scale-100"
                 leaveTo="opacity-0 scale-95"
               >
-                <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-gray p-6 text-left align-middle shadow-xl transition-all">
+                <Dialog.Panel className="w-full max-w-md p-6 overflow-hidden text-left align-middle transition-all transform shadow-xl rounded-2xl bg-gray">
                   <Dialog.Title
                     as="h3"
                     className="text-lg font-medium leading-6 text-white"
diff --git a/lazyweb/hooks/Zustand/index.ts b/lazyweb/hooks/Zustand/index.ts
index 92937c8..8ab2352 100755
--- a/lazyweb/hooks/Zustand/index.ts
+++ b/lazyweb/hooks/Zustand/index.ts
@@ -128,16 +128,21 @@ const useAllCategory = create<{
 const useAllResources = create<{
   loading:Boolean,
   allResources: Resource[]
-  setAllResources: (arg:String) => void
+  setAllResources: (arg:String, arg2?:Resource[]|null) => void
 }>((set) => ({
   loading:false,
   allResources: [],
-  setAllResources: async (selectedTab='all') => {
+  setAllResources: async (selectedTab='all', resources=null) => {
     set(({loading:true}))
     if(selectedTab==='all'){
-      const {data,error} = await supabaseClient.from('website').select('*').eq('isPublicAvailable', 'true').order('id', { ascending: true })
+      if(!resources){
+        const {data} = await axios.get('https://api.lazyweb.rocks/api/websites')
       if(data){
-        set({allResources:data})
+        set({allResources:data.resources})
+      }
+      }
+      else{
+        set({allResources:resources})
       }
     }else if(selectedTab==='my'){
       const {data,error} = await supabaseClient.from('website').select('*').overlaps('created_by_list', [useUserData.getState().session?.id]).order('id', { ascending: true }).order('isPublicAvailable', { ascending: true })
@@ -146,7 +151,6 @@ const useAllResources = create<{
       }
     }else if(selectedTab==='saved'){
       const {data,error} = await supabaseClient.from('bookmarks').select('resource_id').eq('bookmarked_by', useUserData.getState().session?.id).order('id', { ascending: true })
-      //fetch all resources which are available in the bookmarks table
       if(data){
         const {data:errorData,error:errorError} = await supabaseClient.from('website').select('*').in('id', data.map((item)=>item.resource_id)).order('id', { ascending: true })
         if(errorData){
@@ -267,6 +271,18 @@ const useUrlAtIndex = create<
   }
 }))
 
+const useTopProduct = create<
+  {
+    topProduct: Resource|null
+    setTopProduct: (res:Resource) => void
+  }
+>((set) => ({
+  topProduct: null,
+  setTopProduct: async (res:Resource) => {
+    set({topProduct:res})
+  }
+}))
+
 const useSetBookmark = create<
   {
     setComplete:Boolean,
@@ -577,5 +593,6 @@ export {
   useFilterUsingTagsArray,
   useManageSelectedTags,
   useStoreVisitersInfoIfDoesNotExist,
-  useLoginModal
+  useLoginModal,
+  useTopProduct
 }
\ No newline at end of file
diff --git a/lazyweb/hooks/addDataToMongo.ts b/lazyweb/hooks/addDataToMongo.ts
index b8cd078..f545b4d 100644
--- a/lazyweb/hooks/addDataToMongo.ts
+++ b/lazyweb/hooks/addDataToMongo.ts
@@ -16,11 +16,11 @@ export const addDataToMongo = async () => {
     data.forEach(async (resource) => {
       try {
         const { data } = await axios.post(
-          'http://localhost:4000/api/websites/add',
+          'https://api.lazyweb.rocks/api/websites/add',
           resource,
           {
             headers: {
-              Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRpc2h1NTU3MEBnbWFpbC5jb20iLCJleHBpcmF0aW9uRGF0ZSI6IjIwMjMtMDItMjhUMTI6MjY6MjYuMjE2WiIsImlhdCI6MTY3NzE1NTE4Nn0.oCLIBbTPfEX0mjcrTdHv-GnBs-B-dmd1y7MqHgzxsRg`,
+              Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRpc2h1NTU3MEBnbWFpbC5jb20iLCJleHBpcmF0aW9uRGF0ZSI6IjIwMjMtMDMtMDNUMTA6NDI6MjkuNTgwWiIsImlzQWRtaW4iOmZhbHNlLCJpYXQiOjE2Nzc0MDgxNDl9.Q7c0QeHJDfmgHyOEPaBlnXEJXFtKf8R5X8lH1OK5w_Y`,
             },
           }
         );
diff --git a/lazyweb/pages/index.tsx b/lazyweb/pages/index.tsx
index c974d69..598fba1 100755
--- a/lazyweb/pages/index.tsx
+++ b/lazyweb/pages/index.tsx
@@ -3,13 +3,13 @@ import { useEffect, useState} from 'react'
 import { useAllResources, useSelectedTab, useStoreVisitersInfoIfDoesNotExist, useUserData } from '@/hooks/Zustand';
 import { useTour } from '@reactour/tour';
 import { isDesktop } from 'react-device-detect';
+import { addDataToMongo } from '../hooks/addDataToMongo';
 
 
 type Props = {}
 
 
 const Home = (props: Props) => {
-  const {setVisitersInfo} = useStoreVisitersInfoIfDoesNotExist()
   const {setIsOpen,setSteps} = useTour()
   const {session} = useUserData()
   const {allResources} = useAllResources()
@@ -35,10 +35,10 @@ const Home = (props: Props) => {
   },[session])
 
   useEffect(()=>{
+    setisLoadingModalOpen(false)
     if(allResources.length > 0){
-      setisLoadingModalOpen(false)
     }
-  },[allResources])
+  },[])
 
   return (
     <>
diff --git a/package.json b/package.json
index 670d4fb..58eba5d 100644
--- a/package.json
+++ b/package.json
@@ -7,6 +7,7 @@
   "scripts": {
     "start": "concurrently \"yarn workspace lazyweb start\" \"yarn workspace lazyweb-landing-page start\"",
     "dev:all": "concurrently \"yarn workspace lazyweb dev\" \"yarn workspace lazyweb-landing-page dev\"",
+    "dev:app": "yarn workspace lazyweb dev",
     "build": "concurrently \"yarn workspace lazyweb build\" \"yarn workspace lazyweb-landing-page build\""
   },
   "devDependencies": {
